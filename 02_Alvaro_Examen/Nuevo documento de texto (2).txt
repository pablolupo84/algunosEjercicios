package app;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DecimalFormat;
import java.util.Arrays;
public class App {

    public static void main(String[] args) {
String registros[][];
String notasFinales[][] = new String[2][9];
double promnt1, promnt2, promt = 0, promnp1, promnp2, promnp3, promp = 0, prom = 0;
double mayor=0;
String mejorPromedio = "";
String texto = "";
registros = leerArchivo();
DecimalFormat df = new DecimalFormat("#.00");
for (int i = 0; i < registros.length; i++) {
notasFinales[0][i] = registros[i][0];
notasFinales[1][i]=registros[i][8];
}
//se escribe en el archivo
texto += "Promedios M12;N.1 (50,0%);N.2 (50,0%);Prom.T;N.1 (20,0%);N.2 (20,0%);N.3 (60,0%);Prom.P;PROM.NF\n";
promnt1 = sumaColumnas(registros, 1);
promnt2 = sumaColumnas(registros, 2);
promt = sumaColumnas(registros, 3);
promnp1 = sumaColumnas(registros, 4);
promnp2 = sumaColumnas(registros, 5);
promnp3 = sumaColumnas(registros, 6);
promp = sumaColumnas(registros, 7);
prom = sumaFila(notasFinales, 1);
texto += ";" + df.format(promnt1/9) + ";" + df.format(promnt2/9) + ";" + df.format(promt/9) + ";" + df.format(promnp1/9) + ";" +
df.format(promnp2/9) + ";" + df.format(promnp3/9) + ";" + df.format(promp/9) + ";" + df.format(prom/9) + "\n";
escribirArchivo(texto);
//se imprime el arreglo que contiene los promedios finales
for (int i = 0; i < notasFinales.length; i++) {
System.out.println(Arrays.toString(notasFinales[i]));
}
//se busca el mejor promedio
try {
mayor = df.parse(ordenarLista(notasFinales[1])[0]).floatValue();
} catch (Exception e) {
}
for (int i = 0; i < notasFinales.length; i++) {
try {
if (Double.compare(df.parse(notasFinales[1][i]).floatValue(), mayor) == 0) {
mejorPromedio = notasFinales[0][i];
}
} catch (Exception e) {
}
}
System.out.println("El mejor promedio es el alumno de matrÃ­cula " + mejorPromedio);
}
public static String[][] leerArchivo() {
String[][] registros = new String[9][];
try {
int n = 0;
FileReader archivo = new FileReader("A1-SemII2019.csv");
BufferedReader buffer = new BufferedReader(archivo);
String linea = "";
buffer.readLine();
while (linea != null) {
linea = buffer.readLine();
if (linea != null) {
registros[n] = linea.split(";");
n++;
}
}
} catch (IOException e) {
System.out.println("No se ha encontrado el archivo");
}
return registros;
}
public static void escribirArchivo(String texto) {
FileWriter fichero = null;
PrintWriter pw = null;
try {
fichero = new FileWriter("S1-SemII2019.csv");
pw = new PrintWriter(fichero);
pw.println(texto);
} catch (Exception e) {
e.printStackTrace();
} finally {
try {
// Nuevamente aprovechamos el finally para
// asegurarnos que se cierra el fichero.
if (null != fichero) {
fichero.close();
}
} catch (Exception e2) {
e2.printStackTrace();
}
}
}
public static String[] ordenarLista(String arreglo[]) {
DecimalFormat df = new DecimalFormat();
for (int i = 0; i < arreglo.length - 1; i++) {
for (int j = 0; j < arreglo.length - 1; j++) {
try {
double aux1=df.parse(arreglo[j]).floatValue();
double aux2=df.parse(arreglo[j+1]).floatValue();
if (Double.compare(aux1, aux2) < 0) {
String tmp = arreglo[j + 1];
arreglo[j + 1] = arreglo[j];
arreglo[j] = tmp;
}
} catch (Exception e) {
}
}
}
return arreglo;
}
public static double sumaColumnas(String matriz[][], int numColumna) {
DecimalFormat df = new DecimalFormat();
double suma = 0;
try {
for (int i = 0; i < matriz.length; i++) {
suma += df.parse(matriz[i][numColumna]).floatValue();
}
return suma;
} catch (Exception e) {
return suma;
}
}
public static double sumaFila(String matriz[][],int numFila){
DecimalFormat df = new DecimalFormat();
double suma = 0;
try {
for (int i = 0; i < matriz[0].length; i++) {
suma += df.parse(matriz[numFila][i]).floatValue();
}
return suma;
} catch (Exception e) {
return suma;
}
}
}